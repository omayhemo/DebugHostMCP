# Document Registry for MCP Debug Host
# APM Framework v{{VERSION}} - Enhanced with MCP Debug Host Integration
# This registry defines document types, locations, and intelligent placement patterns

metadata:
  project: "MCP Debug Host"
  framework: "APM (Agentic Persona Mapping)"
  version: "{{VERSION}}"
  created: "2025-08-06"
  description: "Document registry for intelligent document placement and organization"

# Document Type Definitions
document_types:
  
  # Core Project Documents
  core:
    description: "Foundation documents for project development"
    location: "project_docs/base/"
    templates: "templates/core/"
    naming_pattern: "{document_type}.md"
    documents:
      - prd.md              # Product Requirements Document
      - architecture.md     # System Architecture
      - frontend-architecture.md  # Frontend Architecture
      - project-structure.md       # Project Organization
      - development-workflow.md    # Development Process
      - tech-stack.md             # Technology Stack
      - data-models.md            # Data Structures
      - environment-vars.md       # Environment Variables
      - api-specification.md      # API Documentation
      - deployment-guide.md       # Deployment Procedures

  # Epic-Level Documentation
  epics:
    description: "Large-scale feature and initiative documentation"
    location: "project_docs/epics/"
    naming_pattern: "epic-{epic_number}.md"
    index_file: "epic-orchestration-guide.md"
    metadata_required:
      - epic_number
      - priority
      - status
      - estimated_effort
      - dependencies

  # User Story Documentation
  stories:
    description: "Individual user story specifications"
    location: "project_docs/stories/"
    naming_pattern: "{epic_num}.{story_num}.story.md"
    alternative_pattern: "story-{epic}-{story}-{slug}.md"
    metadata_required:
      - epic_number
      - story_number
      - acceptance_criteria
      - story_points
      - status

  # Quality Assurance Documentation
  qa:
    description: "Testing, validation, and quality documentation"
    location: "project_docs/qa/"
    subdirectories:
      - test-plans/
      - test-results/
      - automation/
      - reports/
      - dashboards/
      - metrics/
    documents:
      - test-strategy.md
      - test-plan.md
      - automation-plan.md
      - deployment-plan.md
      - validation-summary.md

  # Sprint and Planning Documentation
  planning:
    description: "Sprint planning and project management documents"
    location: "project_docs/planning/"
    subdirectories:
      - stories/current-sprint/
      - sprint-reports/
      - sprints/
    naming_patterns:
      sprint_plan: "sprint-{number}-plan.md"
      sprint_summary: "sprint-{number}-summary.md"
      validation: "sprint-{number}-validation.md"

  # Technical Reports and Analysis
  reports:
    description: "Technical analysis, research, and status reports"
    location: "project_docs/reports/"
    naming_pattern: "{report_type}-{date}-{slug}.md"
    types:
      - research
      - analysis
      - performance
      - security
      - compliance
      - integration

  # Requirements and Specifications
  requirements:
    description: "Detailed requirements and specifications"
    location: "project_docs/requirements/"
    types:
      - functional-requirements.md
      - non-functional-requirements.md
      - technical-specifications.md
      - integration-requirements.md
      - performance-requirements.md

  # Architecture Documentation
  architecture:
    description: "System architecture and design documents"
    location: "project_docs/architecture/"
    documents:
      - system-architecture.md
      - component-architecture.md
      - data-architecture.md
      - security-architecture.md
      - deployment-architecture.md
      - integration-architecture.md

  # Development Documentation
  development:
    description: "Developer guides and implementation docs"
    location: "project_docs/docs/"
    subdirectories:
      - api/
      - guides/
      - tutorials/
      - references/
    naming_pattern: "{category}-{topic}.md"

  # Legacy and Archive Documentation
  archive:
    description: "Historical and deprecated documentation"
    location: "archive-legacy-system/{date}/"
    retention_policy: "indefinite"
    naming_pattern: "{date}-{original_name}"

# Location Mappings
location_mappings:
  
  # Primary documentation paths
  primary_docs: "project_docs/"
  
  # Legacy system archive
  legacy_archive: "archive-legacy-system/"
  
  # Source code documentation
  source_docs: "src/"
  
  # Test documentation
  test_docs: "tests/"
  
  # Configuration documentation
  config_docs: "configs/"
  
  # Docker and deployment docs
  deployment_docs: "docker/"

# Document Placement Rules
placement_rules:
  
  # MCP Debug Host Integration Requirements
  mcp_integration:
    description: "Special placement rules for MCP Debug Host integration"
    requirements:
      - Development documentation MUST reference MCP tools
      - Setup guides MUST use start_dev_server MCP tool
      - Deployment docs MUST include MCP server management workflows
      - Troubleshooting MUST reference server_logs MCP tool
      - Real-time documentation via http://localhost:8080 dashboard
    
  # Agent-specific document creation patterns
  agent_patterns:
    analyst: 
      creates: ["research reports", "analysis documents"]
      location: "project_docs/reports/"
    pm:
      creates: ["PRD", "epic documents", "requirement specs"]
      location: "project_docs/base/" # PRD, project_docs/epics/ # Epics
    architect:
      creates: ["architecture documents", "technical specifications"]
      location: "project_docs/architecture/"
    design_architect:
      creates: ["frontend architecture", "UI specifications"]
      location: "project_docs/architecture/"
    po:
      creates: ["backlog documents", "story prioritization"]
      location: "project_docs/backlog/"
    sm:
      creates: ["sprint plans", "sprint reports", "story management"]
      location: "project_docs/planning/"
    developer:
      creates: ["implementation docs", "code documentation", "technical guides"]
      location: "project_docs/docs/"
    qa:
      creates: ["test plans", "test reports", "validation documents"]
      location: "project_docs/qa/"

# Naming Conventions
naming_conventions:
  
  # Standard patterns
  kebab_case: true
  lowercase: true
  no_spaces: true
  
  # Date formats
  date_format: "YYYY-MM-DD"
  timestamp_format: "YYYY-MM-DD-HH-mm-ss"
  
  # Version patterns
  version_pattern: "v{major}.{minor}.{patch}"
  
  # Epic and story patterns
  epic_pattern: "epic-{number}"
  story_pattern: "story-{epic}-{story}-{slug}"
  
  # Report patterns
  report_pattern: "{type}-report-{date}"
  analysis_pattern: "{subject}-analysis-{date}"

# Metadata Standards
metadata_standards:
  
  # Required metadata for all documents
  required_fields:
    - title
    - created_date
    - last_modified
    - author_agent
    - document_type
    - status
  
  # Optional but recommended
  recommended_fields:
    - epic_number
    - story_number
    - priority
    - tags
    - related_documents
    - dependencies
    - review_status
  
  # APM-specific metadata
  apm_metadata:
    - agent_persona
    - parallel_processing_used
    - sub_agents_involved
    - performance_metrics
    - mcp_integration_level

# Template Locations
templates:
  base_path: "templates/"
  categories:
    core: "templates/core/"
    epics: "templates/epics/"
    stories: "templates/stories/"
    qa: "templates/qa/"
    reports: "templates/reports/"
    architecture: "templates/architecture/"

# Integration Patterns
integrations:
  
  # MCP Debug Host specific patterns
  mcp_debug_host:
    server_management:
      - Document server lifecycle via MCP tools
      - Reference dashboard at http://localhost:8080
      - Use server_logs tool for diagnostics
      - Document persistent sessions
    
    development_workflow:
      - start_dev_server for local development
      - server_status for monitoring
      - server_restart for recovery
      - Live log streaming integration
  
  # APM Framework integration
  apm_framework:
    native_sub_agents: true
    parallel_processing: true
    performance_multiplier: "4-8x faster"
    crash_prevention: "zero CLI crashes"
    
# Validation Rules
validation_rules:
  
  # File naming validation
  file_naming:
    - No spaces in filenames
    - Kebab-case preferred
    - .md extension for markdown
    - Date format: YYYY-MM-DD
  
  # Content validation
  content_requirements:
    - All documents must have metadata header
    - Epic documents must have epic number
    - Story documents must have acceptance criteria
    - QA documents must have test coverage metrics
  
  # Location validation
  location_validation:
    - Documents must be in correct directory
    - Archive documents must have date prefix
    - Template files must be in templates/ directory

# Search and Discovery
search_patterns:
  
  # Common search queries
  by_epic: "epic-{number}*"
  by_story: "story-{epic}-{story}*"
  by_date: "*{date}*"
  by_agent: "*{agent_name}*"
  by_type: "{document_type}*"
  
  # Content search patterns
  mcp_references: "start_dev_server|server_logs|server_status"
  apm_patterns: "parallel|sub-agent|native"
  epic_references: "epic-[0-9]+"
  story_references: "story-[0-9]+-[0-9]+"

# Maintenance and Cleanup
maintenance:
  
  # Cleanup rules
  archive_policy:
    - Move deprecated docs to archive/
    - Maintain version history
    - Keep references updated
  
  # Index maintenance
  index_updates:
    - Update project_docs/index.md automatically
    - Maintain cross-references
    - Update metadata registries
  
  # Link validation
  link_checking:
    - Validate internal document links
    - Check external references
    - Update broken links

# Performance Optimization
performance:
  
  # Document generation optimization
  parallel_generation:
    enabled: true
    max_concurrent: 4
    sub_agent_support: true
  
  # Caching strategies
  template_cache: true
  metadata_cache: true
  search_index: true
  
  # MCP Debug Host optimization
  mcp_integration:
    live_updates: true
    dashboard_integration: true
    log_streaming: true
    session_persistence: true