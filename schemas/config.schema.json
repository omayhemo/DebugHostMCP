{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://apm.dev/schemas/mcp-debug-host-config.json",
  "title": "MCP Debug Host Configuration Schema",
  "description": "Configuration schema for APM MCP Debug Host Server",
  "type": "object",
  "required": ["version", "server", "security", "storage", "processes"],
  "properties": {
    "$schema": {
      "type": "string",
      "description": "JSON Schema reference"
    },
    "version": {
      "type": "string",
      "pattern": "^\\d+\\.\\d+\\.\\d+$",
      "description": "Configuration version"
    },
    "environment": {
      "type": "string",
      "enum": ["development", "staging", "production"],
      "description": "Deployment environment"
    },
    "server": {
      "type": "object",
      "required": ["port", "host"],
      "properties": {
        "port": {
          "type": "integer",
          "minimum": 1,
          "maximum": 65535,
          "description": "Server port number"
        },
        "host": {
          "type": "string",
          "description": "Server host address"
        },
        "protocol": {
          "type": "string",
          "enum": ["http", "https"],
          "description": "Server protocol"
        },
        "maxRequestSize": {
          "type": "string",
          "pattern": "^\\d+(kb|mb|gb)?$",
          "description": "Maximum request size"
        },
        "requestTimeout": {
          "type": "integer",
          "minimum": 1000,
          "maximum": 300000,
          "description": "Request timeout in milliseconds"
        },
        "keepAliveTimeout": {
          "type": "integer",
          "minimum": 1000,
          "description": "Keep-alive timeout in milliseconds"
        }
      }
    },
    "security": {
      "type": "object",
      "required": ["apiKey"],
      "properties": {
        "apiKey": {
          "type": "string",
          "minLength": 16,
          "description": "API key for authentication"
        },
        "allowedOrigins": {
          "type": "string",
          "description": "Allowed CORS origins"
        },
        "enableCors": {
          "type": "boolean",
          "description": "Enable CORS support"
        },
        "rateLimiting": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "Enable rate limiting"
            },
            "windowMs": {
              "type": "integer",
              "minimum": 60000,
              "description": "Rate limit window in milliseconds"
            },
            "maxRequests": {
              "type": "integer",
              "minimum": 1,
              "description": "Maximum requests per window"
            }
          }
        },
        "auth": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "Enable authentication"
            },
            "tokenExpiry": {
              "type": "integer",
              "minimum": 300,
              "description": "Token expiry in seconds"
            },
            "refreshTokenExpiry": {
              "type": "integer",
              "minimum": 3600,
              "description": "Refresh token expiry in seconds"
            }
          }
        }
      }
    },
    "storage": {
      "type": "object",
      "required": ["logs"],
      "properties": {
        "logs": {
          "type": "object",
          "required": ["path", "maxSize"],
          "properties": {
            "path": {
              "type": "string",
              "description": "Log storage path"
            },
            "maxSize": {
              "type": "string",
              "pattern": "^\\d+(kb|mb|gb)?$",
              "description": "Maximum log file size"
            },
            "maxFiles": {
              "type": "integer",
              "minimum": 1,
              "description": "Maximum number of log files"
            },
            "rotation": {
              "type": "string",
              "enum": ["size", "daily", "weekly", "monthly"],
              "description": "Log rotation strategy"
            },
            "retention": {
              "type": "string",
              "pattern": "^\\d+[dwmy]$",
              "description": "Log retention period"
            },
            "compression": {
              "type": "string",
              "enum": ["none", "gzip", "bzip2"],
              "description": "Log compression method"
            },
            "format": {
              "type": "string",
              "enum": ["simple", "json", "combined"],
              "description": "Log format"
            }
          }
        },
        "sessions": {
          "type": "object",
          "properties": {
            "path": {
              "type": "string",
              "description": "Session storage path"
            },
            "maxSize": {
              "type": "string",
              "pattern": "^\\d+(kb|mb|gb)?$",
              "description": "Maximum session storage size"
            },
            "cleanup": {
              "type": "integer",
              "minimum": 300000,
              "description": "Cleanup interval in milliseconds"
            }
          }
        },
        "cache": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "Enable caching"
            },
            "path": {
              "type": "string",
              "description": "Cache storage path"
            },
            "maxSize": {
              "type": "string",
              "pattern": "^\\d+(kb|mb|gb)?$",
              "description": "Maximum cache size"
            },
            "ttl": {
              "type": "integer",
              "minimum": 60,
              "description": "Cache TTL in seconds"
            }
          }
        }
      }
    },
    "processes": {
      "type": "object",
      "required": ["maxConcurrent", "defaultTimeout"],
      "properties": {
        "maxConcurrent": {
          "type": "integer",
          "minimum": 1,
          "maximum": 100,
          "description": "Maximum concurrent processes"
        },
        "defaultTimeout": {
          "type": "integer",
          "minimum": 1000,
          "description": "Default process timeout in milliseconds"
        },
        "autoRestart": {
          "type": "boolean",
          "description": "Enable auto-restart for failed processes"
        },
        "restartDelay": {
          "type": "integer",
          "minimum": 1000,
          "description": "Delay before restart in milliseconds"
        },
        "maxRestarts": {
          "type": "integer",
          "minimum": 0,
          "maximum": 10,
          "description": "Maximum restart attempts"
        },
        "killSignal": {
          "type": "string",
          "enum": ["SIGTERM", "SIGKILL", "SIGINT"],
          "description": "Signal to send when killing processes"
        },
        "killTimeout": {
          "type": "integer",
          "minimum": 1000,
          "maximum": 60000,
          "description": "Timeout before force kill in milliseconds"
        },
        "memoryLimit": {
          "type": "integer",
          "minimum": 128,
          "description": "Memory limit per process in MB"
        },
        "cpuLimit": {
          "type": "integer",
          "minimum": 1,
          "maximum": 100,
          "description": "CPU limit per process as percentage"
        },
        "priority": {
          "type": "integer",
          "minimum": -20,
          "maximum": 19,
          "description": "Process priority"
        }
      }
    },
    "monitoring": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enable monitoring"
        },
        "metricsInterval": {
          "type": "integer",
          "minimum": 10000,
          "description": "Metrics collection interval in milliseconds"
        },
        "healthCheck": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "Enable health checks"
            },
            "interval": {
              "type": "integer",
              "minimum": 10000,
              "description": "Health check interval in milliseconds"
            },
            "timeout": {
              "type": "integer",
              "minimum": 1000,
              "description": "Health check timeout in milliseconds"
            }
          }
        },
        "alerts": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "Enable alerting"
            },
            "memory": {
              "type": "object",
              "properties": {
                "threshold": {
                  "type": "integer",
                  "minimum": 50,
                  "maximum": 100,
                  "description": "Memory usage alert threshold as percentage"
                },
                "action": {
                  "type": "string",
                  "enum": ["log", "alert", "restart", "cleanup"],
                  "description": "Action to take when threshold is exceeded"
                }
              }
            },
            "cpu": {
              "type": "object",
              "properties": {
                "threshold": {
                  "type": "integer",
                  "minimum": 50,
                  "maximum": 100,
                  "description": "CPU usage alert threshold as percentage"
                },
                "action": {
                  "type": "string",
                  "enum": ["log", "alert", "restart", "throttle"],
                  "description": "Action to take when threshold is exceeded"
                }
              }
            },
            "disk": {
              "type": "object",
              "properties": {
                "threshold": {
                  "type": "integer",
                  "minimum": 50,
                  "maximum": 100,
                  "description": "Disk usage alert threshold as percentage"
                },
                "action": {
                  "type": "string",
                  "enum": ["log", "alert", "cleanup", "archive"],
                  "description": "Action to take when threshold is exceeded"
                }
              }
            }
          }
        }
      }
    },
    "detection": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enable project detection"
        },
        "scanDepth": {
          "type": "integer",
          "minimum": 1,
          "maximum": 10,
          "description": "Maximum scan depth for project detection"
        },
        "cacheResults": {
          "type": "boolean",
          "description": "Cache detection results"
        },
        "frameworks": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Supported frameworks for detection"
        },
        "customPatterns": {
          "type": "object",
          "patternProperties": {
            "^[a-zA-Z_][a-zA-Z0-9_]*$": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "description": "Custom detection patterns"
        }
      }
    },
    "dashboard": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enable dashboard"
        },
        "title": {
          "type": "string",
          "minLength": 1,
          "description": "Dashboard title"
        },
        "theme": {
          "type": "string",
          "enum": ["light", "dark", "auto"],
          "description": "Dashboard theme"
        },
        "logBuffer": {
          "type": "integer",
          "minimum": 100,
          "maximum": 10000,
          "description": "Log buffer size"
        },
        "autoScroll": {
          "type": "boolean",
          "description": "Enable auto-scroll for logs"
        },
        "refreshInterval": {
          "type": "integer",
          "minimum": 1000,
          "description": "Dashboard refresh interval in milliseconds"
        },
        "maxConnections": {
          "type": "integer",
          "minimum": 1,
          "maximum": 1000,
          "description": "Maximum concurrent dashboard connections"
        },
        "authentication": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "Enable dashboard authentication"
            },
            "username": {
              "type": "string",
              "minLength": 3,
              "description": "Dashboard username"
            },
            "password": {
              "type": "string",
              "minLength": 8,
              "description": "Dashboard password"
            }
          }
        },
        "features": {
          "type": "object",
          "properties": {
            "realTimeUpdates": {
              "type": "boolean",
              "description": "Enable real-time updates"
            },
            "downloadLogs": {
              "type": "boolean",
              "description": "Enable log download"
            },
            "processControls": {
              "type": "boolean",
              "description": "Enable process control buttons"
            },
            "systemMetrics": {
              "type": "boolean",
              "description": "Show system metrics"
            }
          }
        }
      }
    },
    "integrations": {
      "type": "object",
      "properties": {
        "claude": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "Enable Claude integration"
            },
            "apiVersion": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}$",
              "description": "Claude API version"
            },
            "maxTokens": {
              "type": "integer",
              "minimum": 1024,
              "maximum": 100000,
              "description": "Maximum tokens per request"
            }
          }
        },
        "webhooks": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "Enable webhooks"
            },
            "endpoints": {
              "type": "string",
              "description": "Webhook endpoints (comma-separated URLs)"
            },
            "timeout": {
              "type": "integer",
              "minimum": 1000,
              "maximum": 30000,
              "description": "Webhook timeout in milliseconds"
            },
            "retries": {
              "type": "integer",
              "minimum": 0,
              "maximum": 5,
              "description": "Number of retry attempts"
            }
          }
        },
        "notifications": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "Enable notifications"
            },
            "channels": {
              "type": "string",
              "description": "Notification channels (comma-separated)"
            },
            "events": {
              "type": "string",
              "description": "Events to notify about (comma-separated)"
            }
          }
        }
      }
    },
    "development": {
      "type": "object",
      "properties": {
        "debug": {
          "type": "boolean",
          "description": "Enable debug mode"
        },
        "verboseLogging": {
          "type": "boolean",
          "description": "Enable verbose logging"
        },
        "hotReload": {
          "type": "boolean",
          "description": "Enable hot reload for development"
        },
        "profiling": {
          "type": "boolean",
          "description": "Enable performance profiling"
        },
        "mockData": {
          "type": "boolean",
          "description": "Enable mock data for testing"
        }
      }
    },
    "backup": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enable automatic backups"
        },
        "interval": {
          "type": "integer",
          "minimum": 3600000,
          "description": "Backup interval in milliseconds"
        },
        "retention": {
          "type": "string",
          "pattern": "^\\d+[dwmy]$",
          "description": "Backup retention period"
        },
        "compression": {
          "type": "string",
          "enum": ["none", "gzip", "bzip2"],
          "description": "Backup compression method"
        },
        "destination": {
          "type": "string",
          "description": "Backup destination path"
        }
      }
    }
  }
}